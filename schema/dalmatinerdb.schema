%% -*- erlang -*-

%% @doc The udp port dalmatiner_db listens to, if the number of listeners is
%% greater then 1 the successive ports will be used as well.
{mapping, "udp_port", "dalmatiner_db.udp_port",
 [{default, {{udp_port}} },
  {datatype, integer}]}.

%% @doc The buffer size for UDP
{mapping, "udp_buffer", "dalmatiner_db.udp_buffer",
 [{default, "1MB"},
  {datatype, bytesize}]}.

%% @doc The number of udp listeners, each one gets a own port startting from
%% udp_port.
{mapping, "udp_listeners", "dalmatiner_db.udp_listeners",
 [{default, 1},
  {datatype, integer}]}.

%% @doc To improve performance on UDP a number of loops around the recv call
%% are executed as fast loops, this means w/o ending sending a message for the
%% next round of loops.
%%
%% The higher the number the more fast loops are executed, the downside of a
%% high fast loop count is that only at the end of a fast loop run other queued
%% messages are handled, also downed nodes are only detected at the end of a
%% loop.
{mapping, "udp_fast_loop", "dalmatiner_db.fast_loop_count",
 [{default, 1000},
  {datatype, integer}]}.

%% @doc The amount of time each udp process waits to receive data, lower numbers
%% speed up fastloops when no data is there but might cause problems with the
%% processes spinning idle too fast.
{mapping, "udp_loop_wait", "dalmatiner_db.loop_wait",
 [{default, "100ms"},
  {datatype, {duration, ms}}]}.

%% @doc The tcp port dalmatiner_db listens on for the tcp API
{mapping, "tcp_port", "dalmatiner_db.tcp_port",
 [{default, {{tcp_port}} },
  {datatype, integer}]}.

%% @doc Number of acceptor processes to keep around for tcp connections.
{mapping, "tcp_listeners", "dalmatiner_db.tcp_listeners",
 [{default, 100},
  {datatype, integer}]}.

%% @doc The number of Asyncronous worker for a vnode.
{mapping, "async_workers", "metric_vnode.async_workers",
 [{datatype, integer},
  {default, 5}]}.

%% @doc When handling handoffs how much should be the largest chunk be.
%% Large chunks improve thourhgput but too large chunks will cause
%% timeouts.
{mapping, "handoff_max_chunk_size", "metric_vnode.handoff_chunk",
 [{datatype, bytesize},
  {default, "1KB"}]}.

%% @doc The datapoints stored per file, default equals 1 week of data
%% in a 1 second resolution.
{mapping, "points_per_file", "metric_vnode.points_per_file",
 [{datatype, integer},
  {default, 604800}]}.

%% @doc How many datapoints are cached before being written to disk. This
%% is a maximum value, writes also occour before a specific metric is read,
%% this effects lost data on crashes.
{mapping, "cache_points", "metric_vnode.cache_points",
 [{datatype, integer},
  {default, 120}]}.

%% @doc The path data gets stored into.
{mapping, "platform_data_dir", "riak_core.platform_data_dir",
 [{default, "{{platform_data_dir}}"},
  {datatype, string}]}.

%% @doc Default ring creation size.  Make sure it is a power of 2,
%% e.g. 16, 32, 64, 128, 256, 512 etc
%% This is set to a default of 4 to work in a one server installation
%% if you plan to expand your system please set it higher and reads
%% the manual at http://bit.ly/1ciKRkS
{mapping, "ring_size", "riak_core.ring_creation_size",
 [{datatype, integer},
  {default, 8},
  {commented, 64},
  {validators, ["ring_size"]}
 ]}.

{validator, "ring_size", "not a power of 2 greater than 1",
 fun(Size) ->
         Size > 1 andalso (Size band (Size-1) =:= 0)
 end}.

%% @doc The number of copies of the data that is keeped.
%% For good consistency N  < (R + W) should be true.
{mapping, "n", "dalmatiner_db.n",
 [{datatype, integer},
  {default, 1}]}.

%% @doc The number of replies requried for a read request to succeed
%% The lower the value the faster the replies but the more likely stale
%% data is returend.
{mapping, "r", "dalmatiner_db.r",
 [{datatype, integer},
  {default, 1}]}.

%% @doc The number of replies requried for a write request to succeed
%% The lower the value the faster the write but the more likely to only
%% write partial data.
{mapping, "w", "dalmatiner_db.w",
 [{datatype, integer},
  {default, 1}]}.

